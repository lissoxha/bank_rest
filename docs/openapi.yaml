openapi: 3.0.3
info:
  title: Bank Cards Management API
  description: API for managing bank cards, users, and transactions
  version: 1.0.0
  contact:
    name: Bank Cards Team
    email: support@bankcards.com

servers:
  - url: http://localhost:8080
    description: Development server

security:
  - bearerAuth: []

paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
        '400':
          description: Bad request

  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Register a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Bad request

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "user1"
        password:
          type: string
          example: "password123"

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        type:
          type: string
          example: "Bearer"
        username:
          type: string
          example: "user1"
        role:
          type: string
          example: "USER"

    CreateUserRequest:
      type: object
      required:
        - username
        - email
        - password
        - firstName
        - lastName
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
          example: "user1"
        email:
          type: string
          format: email
          example: "user1@example.com"
        password:
          type: string
          minLength: 6
          example: "password123"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          enum: [USER, ADMIN]
          default: USER
          example: "USER"

    UserDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "user1"
        email:
          type: string
          example: "user1@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          example: "USER"
        isActive:
          type: boolean
          example: true